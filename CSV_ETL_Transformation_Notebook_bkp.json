{"id": "/subscriptions/0e40d638-6ee2-42fa-83d5-78641df4b3cb/resourceGroups/DataQualityPOC/providers/Microsoft.Synapse/workspaces/synapse-etl-poc/notebooks/CSV_ETL_Transformation_Notebook_bkp", "name": "CSV_ETL_Transformation_Notebook_bkp", "type": "Microsoft.Synapse/workspaces/notebooks", "etag": "3a06c3a2-0000-0100-0000-62963e3f0000", "properties": {"entityState": null, "renameOperationDetails": null, "targetSparkConfiguration": null, "folder": {"name": "Testing_PoC/CSV/DNU."}, "big_data_pool": {"type": "BigDataPoolReference", "reference_name": "apachesparkpool"}, "session_properties": {"driver_memory": "28g", "driver_cores": 4, "executor_memory": "28g", "executor_cores": 4, "num_executors": 2}, "metadata": {"enableDebugMode": false, "saveOutput": true, "sessionKeepAliveTimeout": 30, "a365ComputeOptions": {"id": "/subscriptions/0e40d638-6ee2-42fa-83d5-78641df4b3cb/resourceGroups/DataQualityPOC/providers/Microsoft.Synapse/workspaces/synapse-etl-poc/bigDataPools/apachesparkpool", "name": "apachesparkpool", "type": "Spark", "endpoint": "https://synapse-etl-poc.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/apachesparkpool", "auth": {"type": "AAD", "authResource": "https://dev.azuresynapse.net"}, "sparkVersion": "3.1", "nodeCount": 3, "cores": 16, "memory": 112, "extraHeader": null}, "kernelspec": {"name": "synapse_pyspark", "display_name": "Synapse PySpark"}, "language_info": {"name": "python"}}, "nbformat": 4, "nbformat_minor": 2, "cells": [{"execution_count": 1, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}}, "source": ["import pyodbc\r\n", "import openpyxl\r\n", "from openpyxl import load_workbook\r\n", "from openpyxl.utils.dataframe import dataframe_to_rows\r\n", "from openpyxl.worksheet.table import Table, TableStyleInfo\r\n", "import pandas as pd\r\n", "from pyspark.sql import Row, SparkSession\r\n", "import pyspark.sql.functions as F\r\n", "import pyspark.sql.types as T"], "outputs": []}, {"execution_count": 2, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}}, "source": ["from pyspark.sql import SparkSession\r\n", "from pyspark.sql.types import *\r\n", "account_name = \"etlstoragepocaccount\"\r\n", "container_name = \"etlstoragepocfilesystem\"\r\n", "relative_path = \"csv\"\r\n", "adls_path = 'abfss://%s@%s.dfs.core.windows.net/%s' % (container_name, account_name, relative_path)\r\n", "\r\n", "df1 = spark.read.option('header', 'true') \\\r\n", "                .option('delimiter', ',') \\\r\n", "                .csv(adls_path + '/global_superstore.csv')"], "outputs": []}, {"execution_count": 3, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}, "collapsed": false}, "source": ["display(df1.limit(5))\r\n", "df1.registerTempTable('GlobalSuperstore')\r\n", "\r\n", "\r\n", ""], "outputs": []}, {"execution_count": 4, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}}, "source": ["from pyspark.sql.functions import *\r\n", "\r\n", "df2=df1.selectExpr(\"*\",\"CASE WHEN `Order Priority` == 'Critical' THEN  1 WHEN `Order Priority` == 'High' THEN  2 WHEN `Order Priority`== 'Medium' THEN 3  ELSE 4 END AS `Order_Priority_Derived`\")\r\n", "df2=df2.selectExpr(\"*\",\"`Sales`/`Quantity` AS `Sales_Per_Unit`\")\r\n", "df2=df2.select(\"*\",col(\"Order Date\"),date_format(to_date(col(\"Order Date\"),'dd/MM/yyyy'),\"yyyy-MM-dd\").alias(\"Order_Date\")) \\\r\n", " "], "outputs": []}, {"execution_count": 5, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}, "collapsed": false}, "source": ["display(df2.limit(5))\r\n", "\r\n", "df2.printSchema()"], "outputs": []}, {"execution_count": 6, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}, "collapsed": false}, "source": ["df3=df2.selectExpr(\"`Row ID` as `Row_ID`\",\"`Order ID` as `Order_ID`\",\"`Order_Date` as `Order_Date`\",\"`Sales_Per_Unit` as `Sales_Per_Unit`\",\"`Order_Priority_Derived` as `Order_Priority`\")\r\n", "display(df3.limit(5))\r\n", "df3.printSchema()"], "outputs": []}, {"execution_count": 7, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}}, "source": ["#df3.write.parquet('abfss://etlstoragepocfilesystem@etlstoragepocaccount.dfs.core.windows.net/parquet/Global_Superstore')\r\n", ""], "outputs": []}, {"execution_count": 9, "cell_type": "code", "metadata": {"jupyter": {"source_hidden": false, "outputs_hidden": false}, "nteract": {"transient": {"deleting": false}}, "collapsed": false}, "source": ["jdbcHostname = \"sqlserverdataqualitypoc.database.windows.net\"\r\n", "jdbcDatabase = \"sqldbdataqualitypoc\"\r\n", "jdbcPort = \"1433\"\r\n", "username = \"serveradminlogindatadqualitypoc@sqlserverdataqualitypoc\"\r\n", "password = \"@1234Password\"\r\n", "jdbcUrl = \"jdbc:sqlserver://{0}:{1};database={2}\".format(jdbcHostname, jdbcPort, jdbcDatabase)\r\n", "connectionProperties = {\r\n", "   \"user\" : username,\r\n", "   \"password\" : password,\r\n", "   \"driver\" : \"com.microsoft.sqlserver.jdbc.SQLServerDriver\"\r\n", " }\r\n", "\r\n", "\r\n", "\r\n", "df3.write.mode('overwrite').jdbc(jdbcUrl,\"sqldbschema.Global_Superstore\", properties=connectionProperties)"], "outputs": []}]}}